---
import surahToPage from '../data/surah_to_page.json';
import hafsData from '../data/hafs.json';
import '../styles/global.css';
import FloatingControls from '../components/FloatingControls.astro';
import Ayah from '../components/Ayah.astro';
import SurahName from '../components/SurahName.astro';
import AyahTranslation from '../components/AyahTranslation.astro';

const { surah } = Astro.params;

// Set cache headers for browser/CDN caching
Astro.response.headers.set('Cache-Control', 'public, max-age=3600, s-maxage=86400');
const pages = surahToPage[surah as keyof typeof surahToPage];

const surahNumber = parseInt(surah);
const ayahs = hafsData
	.filter((aya) => aya.sura_no === surahNumber)
	.sort((a, b) => a.aya_no - b.aya_no);

const surahName = ayahs[0]?.sura_name_en || '';
const surahNameAr = ayahs[0]?.sura_name_ar || '';
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>{surahName}</title>
		<script is:inline>
			// Apply theme before page renders to prevent flicker
			const theme = localStorage.getItem('theme');
			if (theme === 'dark') {
				document.documentElement.classList.add('dark-theme');
			}
		</script>
		<style>
			.ayah-number {
				font-size: 1.25rem;
				color: var(--secondary-text);
				display: block;
				margin-bottom: 0.5rem;
				font-family: serif;
			}

			.back-home {
				display: inline-block;
				margin-bottom: 1rem;
				color: var(--link-color);
				text-decoration: none;
				font-size: 0.875rem;
			}

			.back-home:hover {
				text-decoration: underline;
			}

			hr {
				border: 0.5px solid var(--border-color);
				margin: 1rem 0;
			}

			body {
				padding-bottom: 4rem;
			}
		</style>
	</head>
	<body>
		<a href={`/#${surahNumber}`} class="back-home">‚Üê Back to Home</a>
		<h1>{surahName} (<SurahName surah={surahNumber} />)</h1>
		<div>
			{ayahs.map((aya) => (
				<div key={aya.id} id={aya.aya_no}>
					<hr />
					<a href={`#${aya.aya_no}`} class="ayah-number">{aya.sura_no}:{aya.aya_no}</a>
					<Ayah surah={surahNumber} ayah={aya.aya_no} />
					<AyahTranslation surah={surahNumber} ayah={aya.aya_no} language="en" translation_id="saheeh" />
				</div>
			))}
		</div>
		<FloatingControls />
		<script>
			// Keyboard navigation for ayahs
			const ayahElements = Array.from(document.querySelectorAll('[id]')).filter(
				(el) => /^\d+$/.test(el.id)
			);

			let currentAyahIndex = 0;

			// Track current ayah using hash or first ayah
			const currentHash = window.location.hash.slice(1);
			if (currentHash) {
				const index = ayahElements.findIndex((el) => el.id === currentHash);
				if (index !== -1) currentAyahIndex = index;
			}

			document.addEventListener('keydown', (e) => {
				if (e.key === 'ArrowRight') {
					// Next ayah
					if (currentAyahIndex < ayahElements.length - 1) {
						currentAyahIndex++;
						const nextAyah = ayahElements[currentAyahIndex];
						nextAyah.scrollIntoView({
							behavior: 'smooth',
							block: 'center'
						});
						history.replaceState(null, '', '#' + nextAyah.id);
					}
				} else if (e.key === 'ArrowLeft') {
					// Previous ayah
					if (currentAyahIndex > 0) {
						currentAyahIndex--;
						const prevAyah = ayahElements[currentAyahIndex];
						prevAyah.scrollIntoView({
							behavior: 'smooth',
							block: 'center'
						});
						history.replaceState(null, '', '#' + prevAyah.id);
					}
				}
			});
		</script>
	</body>
</html>
